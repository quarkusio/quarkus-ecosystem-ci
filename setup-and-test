#!/usr/bin/env bash
set -x -e

cd ecosystem-ci/${ECOSYSTEM_CI_REPO_PATH}
# if an alternative is not specified, then we just read the global info
if [[ -z "${ALTERNATIVE}" ]]; then
  ISSUE_NUM=$(yq e '.issues.latestCommit' ${ECOSYSTEM_CI_REPO_FILE})
  QUARKUS_SHA=$(yq e '.quarkus.sha' ${ECOSYSTEM_CI_REPO_FILE})
  QUARKUS_VERSION=$(yq e '.quarkus.version' ${ECOSYSTEM_CI_REPO_FILE})

  # Detect if Quarkus 2.x is used and point to the correct branch
  REPO_PATH=../../current-repo
  POM_PROPERTY=quarkus.version

  if [[ ! -z "${QUARKUS_VERSION_POM_PATH}" ]]; then
    REPO_PATH="${REPO_PATH}/${QUARKUS_VERSION_POM_PATH}"
  fi

  if [[ ! -z "${QUARKUS_VERSION_POM_PROPERTY}" ]]; then
    POM_PROPERTY=${QUARKUS_VERSION_POM_PROPERTY}
  fi

  if [[ "$(mvn help:evaluate -Dexpression=${POM_PROPERTY} -q -DforceStdout -f ${REPO_PATH}/pom.xml| cut -d. -f1)" = "2" ]]; then
      QUARKUS_BRANCH="2.16"
      QUARKUS_VERSION="2.16.999-SNAPSHOT"
  fi
else
  # Check if the alternative exists
  if [[ "$(yq e '.alternatives|has(env(ALTERNATIVE))' ${ECOSYSTEM_CI_REPO_FILE})" ]] ; then
    ISSUE_NUM=$(yq e ".alternatives.\"${ALTERNATIVE}\".issue" ${ECOSYSTEM_CI_REPO_FILE})
    QUARKUS_BRANCH=$(yq e ".alternatives.\"${ALTERNATIVE}\".quarkusBranch" ${ECOSYSTEM_CI_REPO_FILE})
  else
    # If the requested alternative does not exist, use it as the target branch and reuse issue number
    ISSUE_NUM=$(yq e '.issues.latestCommit' ${ECOSYSTEM_CI_REPO_FILE})
    QUARKUS_BRANCH=$ALTERNATIVE;
  fi
fi
# we assume that the issue repository doesn't change between alternatives
ISSUE_REPO=$(yq e '.issues.repo' ${ECOSYSTEM_CI_REPO_FILE})
cd - > /dev/null

# Checkout Quarkus
if [[ -z "${QUARKUS_BRANCH}" ]]; then
  # a depth of 1 should be fine because this runs almost as soon as the original value of QUARKUS_SHA was created,
  # but lets be on the safe side by pulling in some more history
  git clone --depth=20 --branch main https://github.com/quarkusio/quarkus.git
  cd quarkus
  git checkout ${QUARKUS_SHA}
else
  # if a branch was specified, then just check that out
  git clone --depth=1 --branch ${QUARKUS_BRANCH} https://github.com/quarkusio/quarkus.git
  cd quarkus
fi

if [[ -z "${QUARKUS_VERSION}" ]]; then
  # Alternatives may run against a different Quarkus version, so we need to evaluate that
  QUARKUS_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
fi

echo "Quarkus Version is: ${QUARKUS_VERSION}"

echo "Installing SDKMAN"
curl -s "https://get.sdkman.io" | bash
source ~/.sdkman/bin/sdkman-init.sh
sed -i -e 's/sdkman_auto_answer=false/sdkman_auto_answer=true/g' ~/.sdkman/etc/config

echo "Installing jbang"
sdk install jbang 0.126.3


echo "Building Quarkus"
if ./mvnw -B clean install -Dquickly -Prelocations ; then
  echo "Quarkus built successfully"
else
  echo "Failed to build Quarkus"
  jbang ../ecosystem-ci/quarkus-ecosystem-issue.java token="${ECOSYSTEM_CI_TOKEN}" status="failure" issueRepo="${ISSUE_REPO}" issueNumber="${ISSUE_NUM}" thisRepo="${GITHUB_REPOSITORY}" runId="${GITHUB_RUN_ID}"
  exit 1
fi

cd - > /dev/null

# delete the quarkus repository in order to allow multiple consecutive executions of this script
rm -rf quarkus

cd current-repo

# check prerequisites script
if [ -f .github/ci-prerequisites.sh ]; then
    echo "Prerequisites script found"
else
    echo "Prerequisites script not found - using default from quarkus-ecosystem-ci"
    cp ../ecosystem-ci/ci-prerequisites.sh .github/ci-prerequisites.sh
fi

if .github/ci-prerequisites.sh ; then
  echo "Prerequisites script done"
fi

# check custom init
if [ -f .github/ci-init.sh ]; then
  if QUARKUS_VERSION=${QUARKUS_VERSION} .github/ci-init.sh ; then
    echo "Custom init script done"
  fi
fi

# check the test script
if [ -f .github/quarkus-ecosystem-test ]; then
    echo "Test script found"
else
    echo "Test script not found - using default from quarkus-ecosystem-ci"
    cp ../ecosystem-ci/quarkus-ecosystem-test .github/quarkus-ecosystem-test
fi

# check the report script
if [ -f .github/quarkus-ecosystem-issue.java ]; then
    echo "Report script found"
else
    echo "Report script not found - using default from quarkus-ecosystem-ci"
    cp ../ecosystem-ci/quarkus-ecosystem-issue.java .github/quarkus-ecosystem-issue.java
fi

# check the Maven settings file
if [ -f .github/quarkus-ecosystem-maven-settings.xml ]; then
    echo "Maven settings file found"
else
    echo "Maven settings file not found - using default from quarkus-ecosystem-ci"
    cp ../ecosystem-ci/quarkus-ecosystem-maven-settings.xml .github/quarkus-ecosystem-maven-settings.xml
fi

# perform actual test run
if QUARKUS_VERSION=${QUARKUS_VERSION} .github/quarkus-ecosystem-test ; then
  echo "Tests succeeded"
  TEST_STATUS="success"
else
  echo "Tests failed"
  TEST_STATUS="failure"
fi

echo "Attempting to report results"

jbang .github/quarkus-ecosystem-issue.java token="${ECOSYSTEM_CI_TOKEN}" status="${TEST_STATUS}" issueRepo="${ISSUE_REPO}" issueNumber="${ISSUE_NUM}" thisRepo="${GITHUB_REPOSITORY}" runId="${GITHUB_RUN_ID}"

echo "Report completed"

if [[ ${TEST_STATUS} != "success" ]]; then
  exit 1
fi
